
timerPeripheral1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000250  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003d8  080003e0  000103e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003d8  080003d8  000103e0  2**0
                  CONTENTS
  4 .ARM          00000000  080003d8  080003d8  000103e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003d8  080003e0  000103e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003d8  080003d8  000103d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003dc  080003dc  000103dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000103e0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000103e0  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010410  2**0
                  CONTENTS, READONLY
 14 .debug_info   000004ce  00000000  00000000  00010453  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000138  00000000  00000000  00010921  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000058  00000000  00000000  00010a60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000003a  00000000  00000000  00010ab8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00017044  00000000  00000000  00010af2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0000071b  00000000  00000000  00027b36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0008139f  00000000  00000000  00028251  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000000a4  00000000  00000000  000a95f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000054  00000000  00000000  000a9694  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080003c0 	.word	0x080003c0

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080003c0 	.word	0x080003c0

080001c8 <pc6_tim3_pwm_config>:
#include <stdio.h>
#include <stdint.h>
#include "stm32f405xx.h"
void pc6_tim3_pwm_config(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	af00      	add	r7, sp, #0
   RCC->AHB1ENR|=(1<<2);
 80001cc:	4b1b      	ldr	r3, [pc, #108]	; (800023c <pc6_tim3_pwm_config+0x74>)
 80001ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001d0:	4a1a      	ldr	r2, [pc, #104]	; (800023c <pc6_tim3_pwm_config+0x74>)
 80001d2:	f043 0304 	orr.w	r3, r3, #4
 80001d6:	6313      	str	r3, [r2, #48]	; 0x30
   GPIOC->MODER|=(2<<12);
 80001d8:	4b19      	ldr	r3, [pc, #100]	; (8000240 <pc6_tim3_pwm_config+0x78>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	4a18      	ldr	r2, [pc, #96]	; (8000240 <pc6_tim3_pwm_config+0x78>)
 80001de:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80001e2:	6013      	str	r3, [r2, #0]
   GPIOC->AFR[0]=(2<<24);
 80001e4:	4b16      	ldr	r3, [pc, #88]	; (8000240 <pc6_tim3_pwm_config+0x78>)
 80001e6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80001ea:	621a      	str	r2, [r3, #32]
   RCC->APB1ENR|=(1<<1);
 80001ec:	4b13      	ldr	r3, [pc, #76]	; (800023c <pc6_tim3_pwm_config+0x74>)
 80001ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80001f0:	4a12      	ldr	r2, [pc, #72]	; (800023c <pc6_tim3_pwm_config+0x74>)
 80001f2:	f043 0302 	orr.w	r3, r3, #2
 80001f6:	6413      	str	r3, [r2, #64]	; 0x40
   TIM3->PSC=0;
 80001f8:	4b12      	ldr	r3, [pc, #72]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 80001fa:	2200      	movs	r2, #0
 80001fc:	629a      	str	r2, [r3, #40]	; 0x28
   TIM3->CNT=0;
 80001fe:	4b11      	ldr	r3, [pc, #68]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 8000200:	2200      	movs	r2, #0
 8000202:	625a      	str	r2, [r3, #36]	; 0x24
   TIM3->CR1|=(1<<0);
 8000204:	4b0f      	ldr	r3, [pc, #60]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a0e      	ldr	r2, [pc, #56]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 800020a:	f043 0301 	orr.w	r3, r3, #1
 800020e:	6013      	str	r3, [r2, #0]
   TIM3->CCMR1|=(0<<3);
 8000210:	4b0c      	ldr	r3, [pc, #48]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 8000212:	4a0c      	ldr	r2, [pc, #48]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 8000214:	699b      	ldr	r3, [r3, #24]
 8000216:	6193      	str	r3, [r2, #24]
   TIM3->CCMR1|=(7<<4);
 8000218:	4b0a      	ldr	r3, [pc, #40]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 800021a:	699b      	ldr	r3, [r3, #24]
 800021c:	4a09      	ldr	r2, [pc, #36]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 800021e:	f043 0370 	orr.w	r3, r3, #112	; 0x70
 8000222:	6193      	str	r3, [r2, #24]
   TIM3->CCER|=(3<<0);
 8000224:	4b07      	ldr	r3, [pc, #28]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 8000226:	6a1b      	ldr	r3, [r3, #32]
 8000228:	4a06      	ldr	r2, [pc, #24]	; (8000244 <pc6_tim3_pwm_config+0x7c>)
 800022a:	f043 0303 	orr.w	r3, r3, #3
 800022e:	6213      	str	r3, [r2, #32]
}
 8000230:	bf00      	nop
 8000232:	46bd      	mov	sp, r7
 8000234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000238:	4770      	bx	lr
 800023a:	bf00      	nop
 800023c:	40023800 	.word	0x40023800
 8000240:	40020800 	.word	0x40020800
 8000244:	40000400 	.word	0x40000400

08000248 <tim3_pc6_set_dutycycle>:
void tim3_pc6_set_dutycycle(uint32_t freq, uint32_t duty_cycle, uint8_t channel)
{
 8000248:	b480      	push	{r7}
 800024a:	b085      	sub	sp, #20
 800024c:	af00      	add	r7, sp, #0
 800024e:	60f8      	str	r0, [r7, #12]
 8000250:	60b9      	str	r1, [r7, #8]
 8000252:	4613      	mov	r3, r2
 8000254:	71fb      	strb	r3, [r7, #7]
	TIM3->ARR=((16000000/freq)-1);
 8000256:	4a0c      	ldr	r2, [pc, #48]	; (8000288 <tim3_pc6_set_dutycycle+0x40>)
 8000258:	68fb      	ldr	r3, [r7, #12]
 800025a:	fbb2 f3f3 	udiv	r3, r2, r3
 800025e:	4a0b      	ldr	r2, [pc, #44]	; (800028c <tim3_pc6_set_dutycycle+0x44>)
 8000260:	3b01      	subs	r3, #1
 8000262:	62d3      	str	r3, [r2, #44]	; 0x2c
	TIM3->CCR1=(duty_cycle*((TIM3->ARR)+1))/100;
 8000264:	4b09      	ldr	r3, [pc, #36]	; (800028c <tim3_pc6_set_dutycycle+0x44>)
 8000266:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000268:	3301      	adds	r3, #1
 800026a:	68ba      	ldr	r2, [r7, #8]
 800026c:	fb02 f303 	mul.w	r3, r2, r3
 8000270:	4a06      	ldr	r2, [pc, #24]	; (800028c <tim3_pc6_set_dutycycle+0x44>)
 8000272:	4907      	ldr	r1, [pc, #28]	; (8000290 <tim3_pc6_set_dutycycle+0x48>)
 8000274:	fba1 1303 	umull	r1, r3, r1, r3
 8000278:	095b      	lsrs	r3, r3, #5
 800027a:	6353      	str	r3, [r2, #52]	; 0x34
}
 800027c:	bf00      	nop
 800027e:	3714      	adds	r7, #20
 8000280:	46bd      	mov	sp, r7
 8000282:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000286:	4770      	bx	lr
 8000288:	00f42400 	.word	0x00f42400
 800028c:	40000400 	.word	0x40000400
 8000290:	51eb851f 	.word	0x51eb851f

08000294 <main>:
int main()
{
 8000294:	b580      	push	{r7, lr}
 8000296:	b084      	sub	sp, #16
 8000298:	af00      	add	r7, sp, #0
	pc6_tim3_pwm_config();
 800029a:	f7ff ff95 	bl	80001c8 <pc6_tim3_pwm_config>
     while(1)
     {
    	 tim3_pc6_set_dutycycle(1000,90,1);
 800029e:	2201      	movs	r2, #1
 80002a0:	215a      	movs	r1, #90	; 0x5a
 80002a2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002a6:	f7ff ffcf 	bl	8000248 <tim3_pc6_set_dutycycle>
    	 for(int i=0;i<3000000;i++);
 80002aa:	2300      	movs	r3, #0
 80002ac:	60fb      	str	r3, [r7, #12]
 80002ae:	e002      	b.n	80002b6 <main+0x22>
 80002b0:	68fb      	ldr	r3, [r7, #12]
 80002b2:	3301      	adds	r3, #1
 80002b4:	60fb      	str	r3, [r7, #12]
 80002b6:	68fb      	ldr	r3, [r7, #12]
 80002b8:	4a19      	ldr	r2, [pc, #100]	; (8000320 <main+0x8c>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	ddf8      	ble.n	80002b0 <main+0x1c>
    	 tim3_pc6_set_dutycycle(1000,75,1);
 80002be:	2201      	movs	r2, #1
 80002c0:	214b      	movs	r1, #75	; 0x4b
 80002c2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002c6:	f7ff ffbf 	bl	8000248 <tim3_pc6_set_dutycycle>
    	 for(int i=0;i<3000000;i++);
 80002ca:	2300      	movs	r3, #0
 80002cc:	60bb      	str	r3, [r7, #8]
 80002ce:	e002      	b.n	80002d6 <main+0x42>
 80002d0:	68bb      	ldr	r3, [r7, #8]
 80002d2:	3301      	adds	r3, #1
 80002d4:	60bb      	str	r3, [r7, #8]
 80002d6:	68bb      	ldr	r3, [r7, #8]
 80002d8:	4a11      	ldr	r2, [pc, #68]	; (8000320 <main+0x8c>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	ddf8      	ble.n	80002d0 <main+0x3c>
    	 tim3_pc6_set_dutycycle(1000,50,1);
 80002de:	2201      	movs	r2, #1
 80002e0:	2132      	movs	r1, #50	; 0x32
 80002e2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002e6:	f7ff ffaf 	bl	8000248 <tim3_pc6_set_dutycycle>
    	 for(int i=0;i<3000000;i++);
 80002ea:	2300      	movs	r3, #0
 80002ec:	607b      	str	r3, [r7, #4]
 80002ee:	e002      	b.n	80002f6 <main+0x62>
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	3301      	adds	r3, #1
 80002f4:	607b      	str	r3, [r7, #4]
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a09      	ldr	r2, [pc, #36]	; (8000320 <main+0x8c>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	ddf8      	ble.n	80002f0 <main+0x5c>
    	 tim3_pc6_set_dutycycle(1000,25,1);
 80002fe:	2201      	movs	r2, #1
 8000300:	2119      	movs	r1, #25
 8000302:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000306:	f7ff ff9f 	bl	8000248 <tim3_pc6_set_dutycycle>
    	 for(int i=0;i<3000000;i++);
 800030a:	2300      	movs	r3, #0
 800030c:	603b      	str	r3, [r7, #0]
 800030e:	e002      	b.n	8000316 <main+0x82>
 8000310:	683b      	ldr	r3, [r7, #0]
 8000312:	3301      	adds	r3, #1
 8000314:	603b      	str	r3, [r7, #0]
 8000316:	683b      	ldr	r3, [r7, #0]
 8000318:	4a01      	ldr	r2, [pc, #4]	; (8000320 <main+0x8c>)
 800031a:	4293      	cmp	r3, r2
 800031c:	ddf8      	ble.n	8000310 <main+0x7c>
    	 tim3_pc6_set_dutycycle(1000,90,1);
 800031e:	e7be      	b.n	800029e <main+0xa>
 8000320:	002dc6bf 	.word	0x002dc6bf

08000324 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000324:	480d      	ldr	r0, [pc, #52]	; (800035c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000326:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000328:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800032c:	480c      	ldr	r0, [pc, #48]	; (8000360 <LoopForever+0x6>)
  ldr r1, =_edata
 800032e:	490d      	ldr	r1, [pc, #52]	; (8000364 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000330:	4a0d      	ldr	r2, [pc, #52]	; (8000368 <LoopForever+0xe>)
  movs r3, #0
 8000332:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000334:	e002      	b.n	800033c <LoopCopyDataInit>

08000336 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000336:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000338:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800033a:	3304      	adds	r3, #4

0800033c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800033c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800033e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000340:	d3f9      	bcc.n	8000336 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000342:	4a0a      	ldr	r2, [pc, #40]	; (800036c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000344:	4c0a      	ldr	r4, [pc, #40]	; (8000370 <LoopForever+0x16>)
  movs r3, #0
 8000346:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000348:	e001      	b.n	800034e <LoopFillZerobss>

0800034a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800034a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800034c:	3204      	adds	r2, #4

0800034e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800034e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000350:	d3fb      	bcc.n	800034a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000352:	f000 f811 	bl	8000378 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000356:	f7ff ff9d 	bl	8000294 <main>

0800035a <LoopForever>:

LoopForever:
  b LoopForever
 800035a:	e7fe      	b.n	800035a <LoopForever>
  ldr   r0, =_estack
 800035c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000360:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000364:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000368:	080003e0 	.word	0x080003e0
  ldr r2, =_sbss
 800036c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000370:	2000001c 	.word	0x2000001c

08000374 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000374:	e7fe      	b.n	8000374 <ADC_IRQHandler>
	...

08000378 <__libc_init_array>:
 8000378:	b570      	push	{r4, r5, r6, lr}
 800037a:	4d0d      	ldr	r5, [pc, #52]	; (80003b0 <__libc_init_array+0x38>)
 800037c:	4c0d      	ldr	r4, [pc, #52]	; (80003b4 <__libc_init_array+0x3c>)
 800037e:	1b64      	subs	r4, r4, r5
 8000380:	10a4      	asrs	r4, r4, #2
 8000382:	2600      	movs	r6, #0
 8000384:	42a6      	cmp	r6, r4
 8000386:	d109      	bne.n	800039c <__libc_init_array+0x24>
 8000388:	4d0b      	ldr	r5, [pc, #44]	; (80003b8 <__libc_init_array+0x40>)
 800038a:	4c0c      	ldr	r4, [pc, #48]	; (80003bc <__libc_init_array+0x44>)
 800038c:	f000 f818 	bl	80003c0 <_init>
 8000390:	1b64      	subs	r4, r4, r5
 8000392:	10a4      	asrs	r4, r4, #2
 8000394:	2600      	movs	r6, #0
 8000396:	42a6      	cmp	r6, r4
 8000398:	d105      	bne.n	80003a6 <__libc_init_array+0x2e>
 800039a:	bd70      	pop	{r4, r5, r6, pc}
 800039c:	f855 3b04 	ldr.w	r3, [r5], #4
 80003a0:	4798      	blx	r3
 80003a2:	3601      	adds	r6, #1
 80003a4:	e7ee      	b.n	8000384 <__libc_init_array+0xc>
 80003a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80003aa:	4798      	blx	r3
 80003ac:	3601      	adds	r6, #1
 80003ae:	e7f2      	b.n	8000396 <__libc_init_array+0x1e>
 80003b0:	080003d8 	.word	0x080003d8
 80003b4:	080003d8 	.word	0x080003d8
 80003b8:	080003d8 	.word	0x080003d8
 80003bc:	080003dc 	.word	0x080003dc

080003c0 <_init>:
 80003c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003c2:	bf00      	nop
 80003c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003c6:	bc08      	pop	{r3}
 80003c8:	469e      	mov	lr, r3
 80003ca:	4770      	bx	lr

080003cc <_fini>:
 80003cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ce:	bf00      	nop
 80003d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003d2:	bc08      	pop	{r3}
 80003d4:	469e      	mov	lr, r3
 80003d6:	4770      	bx	lr
